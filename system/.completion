if [ -z "$HOMEBREW_PREFIX" ] && is-executable brew; then
  HOMEBREW_PREFIX=$(brew --prefix)
fi

# Dotfiles
_dotfiles_completions() {
  compadd 'clean configure dock edit help install link macos open unlink update'
}

compdef _dotfiles_completions dotfiles

# npm
if command-exists npm; then
  . <(npm completion)
fi

# fzf
if command-exists fzf; then
  export FZF_COMPLETION_TRIGGER=',,'
  . "$HOMEBREW_PREFIX/opt/fzf/shell/completion.zsh"
fi

# Git

if is-executable git; then
  if [ -f "/usr/share/git/completion/git-completion.bash" ]; then
    . "/usr/share/git/completion/git-completion.bash"
  elif [ -n "$HOMEBREW_PREFIX" ] && [ -f "$HOMEBREW_PREFIX/etc/bash_completion.d/git-completion.bash" ]; then
    . "$HOMEBREW_PREFIX/etc/bash_completion.d/git-completion.bash"
  fi
fi

# pnpm (https://pnpm.io/completion)

_pnpm_completion() {
  local reply
  local si=$IFS

  IFS=$'\n' reply=($(COMP_CWORD="$((CURRENT - 1))" COMP_LINE="$BUFFER" COMP_POINT="$CURSOR" SHELL=zsh pnpm completion-server -- "${words[@]}"))
  IFS=$si

  if [ "$reply" = "__tabtab_complete_files__" ]; then
    _files
  else
    _describe 'values' reply
  fi
}
# When called by the Zsh completion system, this will end with
# "loadautofunc" when initially autoloaded and "shfunc" later on, otherwise,
# the script was "eval"-ed so use "compdef" to register it with the
# completion system
if [[ $zsh_eval_context == *func ]]; then
  _pnpm_completion "$@"
else
  compdef _pnpm_completion pnpm
fi
